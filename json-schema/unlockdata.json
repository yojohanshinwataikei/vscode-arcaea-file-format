{
	"$schema": "http://json-schema.org/draft-07/schema",
	"$id": "https://raw.githubusercontent.com/yojohanshinwataikei/vscode-arcaea-file-format/master/json-schema/packdata.json",
	"title": "Arcaea unlock condition",
	"description": "The unlock condition of songs in Arcaea",
	"type": "object",
	"properties": {
		"songId": {
			"type": "string",
			"description": "The id of the song needed to unlock specified in songlist file"
		},
		"ratingClass": {
			"type": "integer",
			"description": "The rating class of the difficulty that needs to be unlocked, 0 for past, 1 for present 2 for future, 3 for beyond, and 4 for eternal",
			"enum": [
				0,
				1,
				2,
				3,
				4
			]
		},
		"conditions": {
			"type": "array",
			"description": "The unlock conditions of the difficulty",
			"items": {
				"$ref": "#/definitions/condition"
			}
		}
	},
	"required": [
		"songId",
		"ratingClass",
		"conditions"
	],
	"definitions": {
		"condition": {
			"description": "A unlock condition",
			"type": "object",
			"properties": {
				"type": {
					"type": "integer",
					"description": "The type of the unlock condition, 0 for fragments, 1 for grade on earlier charts, 2 for play on earlier charts, 3 for multiple grade on earlier charts, 4 for multiple selectable conditions, 5 for reaching a potential rating, 6 for clear of chart of specific rating, 7 for unlock of earlier charts, 8 for lamp on earlier charts, 9 for grade on chart of specific difficulty, 10 for story read, 80 for play on earlier charts that will hide the chart when 'hidden_util' is 'unlockconditions', 101 for generic anomaly (Grievous Lady/Fracture Ray/Tempestissimo/Infinite Strife,/World Ender/Pentiment/Arcana Eden/Testify/Designant./Astral Quantization), 103 for using a specific partner (Aegleseeker/Arghena), 104 for online check in axiom of the end (Infinite Strife,/World Ender/Pentiment/Arcana Eden/Testify/Loveless Dress/Callima Karma/Last), 105 for using a specific partner in a specific state or not (Last | Eternity), 106 for unlocking another chart or not (Last | Moment), 107 for selected songs with specific first letter (Magnolia), 108 for specific story read (Arghena), 109 for puzzling play in specific rating class (Arghena), 110 for special unlocking course (Arghena), 111 for specific story read (ALTER EGO), 112 for puzzling song selecting (ALTER EGO)"
				}
			},
			"oneOf": [
				{
					"properties": {
						"type": {
							"const": 0
						},
						"credit": {
							"type": "integer",
							"description": "The fragments needed to unlock the song"
						}
					},
					"required": [
						"credit"
					]
				},
				{
					"properties": {
						"type": {
							"const": 1
						},
						"song_id": {
							"type": "string",
							"description": "The id of the song needed to clear specified in songlist file"
						},
						"song_difficulty": {
							"type": "integer",
							"description": "The rating class of the difficulty that needs to clear, 0 for past, 1 for present, 2 for future, 3 for beyond, and 4 for eternal",
							"enum": [
								0,
								1,
								2,
								3,
								4
							]
						},
						"grade": {
							"type": "integer",
							"description": "The require grade to the charts when cleared, 0 for no limit, 1 for C, 2 for B, 3 for A, 4 for AA, 5 for EX, 6 for EX+",
							"enum": [
								0,
								1,
								2,
								3,
								4,
								5,
								6
							]
						}
					},
					"required": [
						"song_id",
						"song_difficulty",
						"grade"
					]
				},
				{
					"properties": {
						"type": {
							"const": 2
						},
						"song_id": {
							"type": "string",
							"description": "The id of the song needed to play specified in songlist file"
						},
						"song_difficulty": {
							"type": "integer",
							"description": "The rating class of the difficulty that needs to clear, 0 for past, 1 for present, 2 for future, 3 for beyond, and 4 for eternal",
							"enum": [
								0,
								1,
								2,
								3,
								4
							]
						}
					},
					"required": [
						"song_id",
						"song_difficulty"
					]
				},
				{
					"properties": {
						"type": {
							"const": 3
						},
						"song_id": {
							"type": "string",
							"description": "The id of the song needed to clear specified in songlist file"
						},
						"song_difficulty": {
							"type": "integer",
							"description": "The rating class of the difficulty that needs to clear, 0 for past, 1 for present, 2 for future, 3 for beyond, and 4 for eternal",
							"enum": [
								0,
								1,
								2,
								3,
								4
							]
						},
						"grade": {
							"type": "integer",
							"description": "The require grade to the charts when cleared, 0 for no limit, 1 for C, 2 for B, 3 for A, 4 for AA, 5 for EX, 6 for EX+",
							"enum": [
								0,
								1,
								2,
								3,
								4,
								5,
								6
							]
						},
						"times": {
							"type": "integer",
							"description": "The required times of clear of the song with the specified grade",
							"minimum": 1
						}
					},
					"required": [
						"song_id",
						"song_difficulty",
						"grade",
						"times"
					]
				},
				{
					"properties": {
						"type": {
							"const": 4
						},
						"conditions": {
							"type": "array",
							"description": "The available options of selectable conditions",
							"items": {
								"$ref": "#/definitions/condition"
							}
						}
					},
					"required": [
						"conditions"
					]
				},
				{
					"properties": {
						"type": {
							"const": 5
						},
						"rating": {
							"type": "integer",
							"description": "The required rating needed to unlock the song, 100 times of potential value"
						}
					},
					"required": [
						"rating"
					]
				},
				{
					"properties": {
						"type": {
							"const": 6
						},
						"count": {
							"type": "integer",
							"minimum": 0,
							"description": "Number of charts of the rating required to be clear"
						},
						"rating": {
							"type": "integer",
							"minimum": 0,
							"description": "The rating of the difficulty, 0 for \"?\", other number for corresponding number value. before 3.0.0 it is 0 for \"?\", 10 for \"9+\", 11 for \"10\" and 1~9 for corresponding number value"
						},
						"ratingPlus": {
							"type": "boolean",
							"description": "Should the difficulty of the chart annotated with a plus sign, like 9+, 10+"
						}
					},
					"required": [
						"count",
						"rating"
					]
				},
				{
					"properties": {
						"type": {
							"const": 7
						},
						"song_id": {
							"type": "string",
							"description": "The id of the song needed to unlock specified in songlist file"
						},
						"song_difficulty": {
							"type": "integer",
							"description": "The rating class of the difficulty that needs to unlock, 0 for past, 1 for present, 2 for future, 3 for beyond, and 4 for eternal",
							"enum": [
								0,
								1,
								2,
								3,
								4
							]
						}
					},
					"required": [
						"song_id",
						"song_difficulty"
					]
				},
				{
					"properties": {
						"type": {
							"const": 8
						},
						"song_id": {
							"type": "string",
							"description": "The id of the song needed to unlock specified in songlist file"
						},
						"song_difficulty": {
							"type": "integer",
							"description": "The rating class of the difficulty that needs to unlock, 0 for past, 1 for present, 2 for future, 3 for beyond, and 4 for eternal",
							"enum": [
								0,
								1,
								2,
								3,
								4
							]
						},
						"lamp": {
							"type": "integer",
							"description": "The lamp that needs to unlock, 0 for track lost, 1 for normal clear, 2 for full recall, 3 for pure memory, 4 for easy clear, and 5 for hard clear",
							"enum": [
								0,
								1,
								2,
								3,
								4,
								5
							]
						}
					},
					"required": [
						"song_id",
						"song_difficulty",
						"lamp"
					]
				},
				{
					"properties": {
						"type": {
							"const": 9
						},
						"count": {
							"type": "integer",
							"minimum": 0,
							"description": "Number of charts of the rating required to be clear"
						},
						"difficulty": {
							"type": "integer",
							"description": "The rating class of the difficulty that needs to unlock, 0 for past, 1 for present, 2 for future, 3 for beyond, and 4 for eternal",
							"enum": [
								0,
								1,
								2,
								3,
								4
							]
						},
						"grade": {
							"type": "integer",
							"description": "The require grade to the charts when cleared, 0 for no limit, 1 for C, 2 for B, 3 for A, 4 for AA, 5 for EX, 6 for EX+",
							"enum": [
								0,
								1,
								2,
								3,
								4,
								5,
								6
							]
						}
					},
					"required": [
						"count",
						"difficulty",
						"grade"
					]
				},
				{
					"properties": {
						"type": {
							"const": 10
						},
						"major": {
							"type": "integer",
							"minimum": 0,
							"description": "The number id of the story series"
						},
						"minor": {
							"type": "integer",
							"minimum": 0,
							"description": "The number id of the story entry in the series"
						}
					},
					"required": [
						"major",
						"minor"
					]
				},
				{
					"properties": {
						"type": {
							"const": 80
						},
						"song_id": {
							"type": "string",
							"description": "The id of the song needed to play specified in songlist file"
						},
						"song_difficulty": {
							"type": "integer",
							"description": "The rating class of the difficulty that needs to clear, 0 for past, 1 for present, 2 for future, 3 for beyond, and 4 for eternal",
							"enum": [
								0,
								1,
								2,
								3,
								4
							]
						}
					},
					"required": [
						"song_id",
						"song_difficulty"
					]
				},
				{
					"properties": {
						"type": {
							"const": 101
						},
						"min": {
							"type": "integer",
							"description": "The minimum progress when failed to unlock this song",
							"minimum": 0,
							"maximum": 100
						},
						"max": {
							"type": "integer",
							"description": "The maximum progress when failed to unlock this song",
							"minimum": 0,
							"maximum": 100
						}
					},
					"required": [
						"min",
						"max"
					]
				},
				{
					"properties": {
						"type": {
							"const": 103
						},
						"id": {
							"type": "integer",
							"description": "The id of the partner needed to unlock this song"
						}
					},
					"required": [
						"id"
					]
				},
				{
					"properties": {
						"type": {
							"const": 104
						}
					}
				},
				{
					"properties": {
						"type": {
							"const": 105
						},
						"char_id": {
							"type": "integer",
							"description": "The id of the partner in the unlock condition"
						},
						"awakened": {
							"type": "boolean",
							"description": "Should the partner be awakened"
						},
						"inverted": {
							"type": "boolean",
							"description": "Is the unlock condition inverted"
						}
					},
					"required": [
						"char_id",
						"awakened",
						"inverted"
					]
				},
				{
					"properties": {
						"type": {
							"const": 106
						},
						"song_id": {
							"type": "string",
							"description": "The id of the song in the unlock condition"
						},
						"song_difficulty": {
							"type": "integer",
							"description": "The rating class of the difficulty in the unlock condition, 0 for past, 1 for present, 2 for future, 3 for beyond, and 4 for eternal",
							"enum": [
								0,
								1,
								2,
								3,
								4
							]
						},
						"inverted": {
							"type": "boolean",
							"description": "Is the unlock condition inverted"
						}
					},
					"required": [
						"song_id",
						"song_difficulty",
						"inverted"
					]
				},
				{
					"properties": {
						"type": {
							"const": 107
						}
					}
				},
				{
					"properties": {
						"type": {
							"const": 108
						}
					}
				},
				{
					"properties": {
						"type": {
							"const": 109
						},
						"index": {
							"type": "integer",
							"description": "The type of the puzzle",
							"enum": [
								0,
								1,
								2
							]
						},
						"difficulty": {
							"type": "integer",
							"description": "The rating class of the difficulty in the unlock condition, 0 for past, 1 for present, 2 for future, 3 for beyond, and 4 for eternal",
							"enum": [
								0,
								1,
								2,
								3,
								4
							]
						}
					},
					"required": [
						"index",
						"difficulty"
					]
				},
				{
					"properties": {
						"type": {
							"const": 110
						}
					}
				},
				{
					"properties": {
						"type": {
							"const": 111
						}
					}
				},
				{
					"properties": {
						"type": {
							"const": 112
						}
					}
				}
			],
			"required": [
				"type"
			]
		}
	}
}