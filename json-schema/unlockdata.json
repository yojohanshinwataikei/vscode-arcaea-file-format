{
	"$schema": "http://json-schema.org/draft-07/schema",
	"$id": "https://raw.githubusercontent.com/yojohanshinwataikei/vscode-arcaea-file-format/master/json-schema/packdata.json",
	"title": "Arcaea unlock condition",
	"description": "The unlock condition of songs in Arcaea",
	"type": "object",
	"properties": {
		"songId": {
			"type": "string",
			"description": "The id of the song needed to unlock specified in songlist file"
		},
		"ratingClass": {
			"type": "integer",
			"description": "The rating class of the difficulty that needs to be unlocked, 0 for past, 1 for present 2 for future, 3 for beyond, and 4 for eternal",
			"enum": [
				0,
				1,
				2,
				3,
				4
			]
		},
		"conditions": {
			"type": "array",
			"description": "The unlock conditions of the difficulty",
			"items": {
				"$ref": "#/definitions/condition"
			}
		}
	},
	"required": [
		"songId",
		"ratingClass",
		"conditions"
	],
	"definitions": {
		"condition": {
			"description": "A unlock condition",
			"type": "object",
			"properties": {
				"type": {
					"type": "integer",
					"description": "The type of the unlock condition, 0 for fragments, 1 for grade on early charts, 2 for play on early charts, 3 for multiple grade on early charts, 4 for multiple selectable conditions, 5 for reaching a potential rating, 6 for clear of chart of specific rating, 101 for anomaly, 103 for a specific partner, 104 for online check, 105 for using a specific partner in a specific state or not, 106 for unlocking another chart or not, 107 for selected songs with specific first letter, 108 for specific story read, 109 for puzzling play in specific rating class, 110 for special unlocking course"
				}
			},
			"oneOf": [
				{
					"properties": {
						"type": {
							"const": 0
						},
						"credit": {
							"type": "integer",
							"description": "The fragments needed to unlock the song"
						}
					},
					"required": [
						"credit"
					]
				},
				{
					"properties": {
						"type": {
							"const": 1
						},
						"song_id": {
							"type": "string",
							"description": "The id of the song needed to clear specified in songlist file"
						},
						"song_difficulty": {
							"type": "integer",
							"description": "The rating class of the difficulty that needs to clear, 0 for past, 1 for present, 2 for future, 3 for beyond, and 4 for eternal",
							"enum": [
								0,
								1,
								2,
								3,
								4
							]
						},
						"grade": {
							"type": "integer",
							"description": "The require grade to the charts when cleared, 0 for no limit, 1 for C, 2 for B, 3 for A, 4 for AA, 5 for EX, 6 for EX+",
							"enum": [
								0,
								1,
								2,
								3,
								4,
								5,
								6
							]
						}
					},
					"required": [
						"song_id",
						"song_difficulty",
						"grade"
					]
				},
				{
					"properties": {
						"type": {
							"const": 2
						},
						"song_id": {
							"type": "string",
							"description": "The id of the song needed to play specified in songlist file"
						},
						"song_difficulty": {
							"type": "integer",
							"description": "The rating class of the difficulty that needs to clear, 0 for past, 1 for present, 2 for future, 3 for beyond, and 4 for eternal",
							"enum": [
								0,
								1,
								2,
								3,
								4
							]
						}
					},
					"required": [
						"song_id",
						"song_difficulty"
					]
				},
				{
					"properties": {
						"type": {
							"const": 3
						},
						"song_id": {
							"type": "string",
							"description": "The id of the song needed to clear specified in songlist file"
						},
						"song_difficulty": {
							"type": "integer",
							"description": "The rating class of the difficulty that needs to clear, 0 for past, 1 for present, 2 for future, 3 for beyond, and 4 for eternal",
							"enum": [
								0,
								1,
								2,
								3,
								4
							]
						},
						"grade": {
							"type": "integer",
							"description": "The require grade to the charts when cleared, 0 for no limit, 1 for C, 2 for B, 3 for A, 4 for AA, 5 for EX, 6 for EX+",
							"enum": [
								0,
								1,
								2,
								3,
								4,
								5,
								6
							]
						},
						"times": {
							"type": "integer",
							"description": "The required times of clear of the song with the specified grade",
							"minimum": 1
						}
					},
					"required": [
						"song_id",
						"song_difficulty",
						"grade",
						"times"
					]
				},
				{
					"properties": {
						"type": {
							"const": 4
						},
						"conditions": {
							"type": "array",
							"description": "The available options of selectable conditions",
							"items": {
								"$ref": "#/definitions/condition"
							}
						}
					},
					"required": [
						"conditions"
					]
				},
				{
					"properties": {
						"type": {
							"const": 5
						},
						"rating": {
							"type": "integer",
							"description": "The required rating needed to unlock the song, 100 times of potential value"
						}
					},
					"required": [
						"rating"
					]
				},
				{
					"properties": {
						"type": {
							"const": 6
						},
						"count": {
							"type": "integer",
							"minimum": 0,
							"description": "Number of charts of the rating required to be clear"
						},
						"rating": {
							"type": "integer",
							"minimum": 0,
							"description": "The rating of the difficulty, 0 for \"?\", other number for corresponding number value. before 3.0.0 it is 0 for \"?\", 10 for \"9+\", 11 for \"10\" and 1~9 for corresponding number value"
						},
						"ratingPlus": {
							"type": "boolean",
							"description": "Should the difficulty of the chart annotated with a plus sign, like 9+, 10+"
						}
					},
					"required": [
						"count",
						"rating"
					]
				},
				{
					"properties": {
						"type": {
							"const": 101
						},
						"min": {
							"type": "integer",
							"description": "The minimum progress when failed to unlock this song",
							"minimum": 0,
							"maximum": 100
						},
						"max": {
							"type": "integer",
							"description": "The maximum progress when failed to unlock this song",
							"minimum": 0,
							"maximum": 100
						}
					},
					"required": [
						"min",
						"max"
					]
				},
				{
					"properties": {
						"type": {
							"const": 103
						},
						"id": {
							"type": "integer",
							"description": "The id of the partner needed to unlock this song"
						}
					},
					"required": [
						"id"
					]
				},
				{
					"properties": {
						"type": {
							"const": 104
						}
					}
				},
				{
					"properties": {
						"type": {
							"const": 105
						},
						"char_id": {
							"type": "integer",
							"description": "The id of the partner in the unlock condition"
						},
						"awakened": {
							"type": "boolean",
							"description": "Should the partner be awakened"
						},
						"inverted": {
							"type": "boolean",
							"description": "Is the unlock condition inverted"
						}
					},
					"required": [
						"char_id",
						"awakened",
						"inverted"
					]
				},
				{
					"properties": {
						"type": {
							"const": 106
						},
						"song_id": {
							"type": "string",
							"description": "The id of the song in the unlock condition"
						},
						"song_difficulty": {
							"type": "integer",
							"description": "The rating class of the difficulty in the unlock condition, 0 for past, 1 for present, 2 for future, 3 for beyond, and 4 for eternal",
							"enum": [
								0,
								1,
								2,
								3,
								4
							]
						},
						"inverted": {
							"type": "boolean",
							"description": "Is the unlock condition inverted"
						}
					},
					"required": [
						"song_id",
						"song_difficulty",
						"inverted"
					]
				},
				{
					"properties": {
						"type": {
							"const": 107
						}
					}
				},
				{
					"properties": {
						"type": {
							"const": 108
						}
					}
				},
				{
					"properties": {
						"type": {
							"const": 109
						},
						"index": {
							"type": "integer",
							"description": "The type of the puzzle",
							"enum": [
								0,
								1,
								2
							]
						},
						"difficulty": {
							"type": "integer",
							"description": "The rating class of the difficulty in the unlock condition, 0 for past, 1 for present, 2 for future, 3 for beyond, and 4 for eternal",
							"enum": [
								0,
								1,
								2,
								3,
								4
							]
						}
					},
					"required": [
						"index",
						"difficulty"
					]
				},
				{
					"properties": {
						"type": {
							"const": 110
						}
					}
				}
			],
			"required": [
				"type"
			]
		}
	}
}